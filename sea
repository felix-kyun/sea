#!/usr/bin/env bash

# sea
# utility helper for launching various sea tools

CURRENT_DIR=$(dirname "$(readlink -f "$0")")

launch_util() {
    [[ ! -f "${CURRENT_DIR}/${1}/launch.sh" ]] && {
        echo "Error: Script ${CURRENT_DIR}/${1}/launch.sh does not exist"
        exit 1
    }

    bash "${CURRENT_DIR}/${1}/launch.sh" "${@:3}" & disown
}

launch_util_if_exists() {
    [[ -f "${CURRENT_DIR}/${1}/launch.sh" ]] && {
        launch_util "$1" "${@:2}"
    } || {
        show_help
        exit 1
    }
}

install() {
    local target_path="/usr/local/bin/sea"
    local script_path=$(readlink -f "$0")

    if [[ -f "$target_path" ]]; then
        echo "Error: $target_path already exists."

        echo -n "Remove and install it ? (y/n) "
        read -r answer
        if [[ "$answer" != "y" ]]; then
            echo "Installation aborted."
            exit 1
        fi

        sudo rm -f "$target_path" || {
            echo "Error: Unable to remove existing $target_path"
            exit 1
        }
    fi

    sudo ln -s "$script_path" "$target_path" || {
        echo "Error: Unable to copy script to $target_path"
        exit 1
    }

    sudo chmod +x "$target_path" || {
        echo "Error: Unable to make $target_path executable"
        exit 1
    }

    echo "sea utility installed successfully at $target_path"
}

show_help() {
    echo "Usage: sea [command] [args]"
    echo "Commands:"
    echo "  launch <utility_name> [args] - Launch a specific sea utility"
    echo "  monitor <process_name> [interval] - Monitor CPU and memory usage of a process"
    echo "  kill <process_name>   - Kill a specific sea process"
    echo "  killall               - Kill all sea processes"
    echo "  install               - Install the sea utility"
    echo "  remove                - Remove the sea utility"
    echo "  help, --help, -h      - Show this help message"
    exit 0
}

remove() {
    local target_path="/usr/local/bin/sea"

    if [[ -f "$target_path" ]]; then
        sudo rm -f "$target_path" || {
            echo "Error: Unable to remove $target_path"
            exit 1
        }
        echo "sea utility removed successfully from $target_path"
    else
        echo "Error: $target_path does not exist."
        exit 1
    fi
}

monitor() {
    local process_name="$1"
    local interval="${2:-5}"
    local process_pid=$(ps aux | awk " /sea.*${process_name}.*launch\.sh$/ { print \$2 }")

    [[ -z "$process_pid" ]] && {
        echo "Error: Process $process_name not found"
        exit 1
    }

    echo "Process: $process_name (PID: $process_pid)"
    while true; do
        pids=$(pstree -p $process_pid | grep -oP '\(\K[0-9]+')
        cpu_usage=$(ps --no-headers -o %cpu -p $(echo $pids | tr ' ' ',') | awk '{s+=$1} END {print s}')
        mem_usage=$(ps --no-headers -o %mem -p $(echo $pids | tr ' ' ',') | awk '{s+=$1} END {print s}')
        echo -ne "\rCPU Usage: $cpu_usage% | Memory Usage: $mem_usage%    "

        sleep "$interval"
    done
}

kill_util() {
    ps aux | awk "/bash.*sea.*${1}.*sh$/ { print \$2 }" | xargs kill
}

killall_util() {
    ps aux | awk "/bash.*sea.*sh$/ { print \$2 }" | xargs kill
}

case "$1" in
    kill)
        kill_util $2  &>/dev/null || {
            echo "Error: Unable to kill $2"
            exit 1
        }
    ;;
    killall)
         killall_util &>/dev/null || {
            echo "Error: Unable to kill all sea processes"
            exit 1
        }
    ;;
    install)
        install "$0"
    ;;
    remove)
        remove
    ;;
    monitor)
        [[ -z "$2" ]] && {
            echo "Error: Process name is required for monitoring"
            exit 1
        }
        monitor "$2" "$3"
    ;;
        launch)
        [[ -z "$2" ]] && {
            echo "Error: Utility name is required to launch"
            exit 1
        }
        launch_util "$2" "${@:3}"
    ;;
    help|--help|-h)
        show_help
    ;;
    *)
    launch_util_if_exists "$1" "${@:2}"
    ;;
esac
